/// <reference types="react" />
import * as React from 'react';
import { GestureResponderEvent, LayoutChangeEvent, StyleSheet as StyleSheetRN, Animated as AnimatedRN } from 'react-native';
import { PlatformStatic } from './Platform';
export interface InsetProp {
    top: number;
    right: number;
    bottom: number;
    left: number;
}
export declare type PressEvent = GestureResponderEvent | React.MouseEvent<any>;
export interface TouchableProps {
    accessible?: boolean;
    disabled?: boolean;
    onPress?(event: PressEvent): void;
    onPressIn?(event: PressEvent): void;
    onPressOut?(event: PressEvent): void;
    onLongPress?(event: PressEvent): void;
    onLayout?(event: LayoutChangeEvent): void;
    delayPressIn?: number;
    delayPressOut?: number;
    delayLongPress?: number;
    pressRetentionOffset?: InsetProp;
    hitSlop?: InsetProp;
    activeValue?: number;
    press?: typeof AnimatedRN['Value'];
    pressDuration?: number;
    children?: React.ReactNode;
}
export declare type TouchableStatic = React.ComponentClass<TouchableProps>;
export declare const createTouchable: (Animated: typeof AnimatedRN, StyleSheet: typeof StyleSheetRN, Platform: PlatformStatic, TouchableMixin: any) => React.ComponentClass<TouchableProps>;
